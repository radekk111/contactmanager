{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/layout/FormGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/About.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","e","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","react_router_dom","to","marginTop","marginRight","fontSize","protoTypes","PropTypes","object","isRequired","Contacts","Fragment","contacts_Contact","Header","branding","exact","activeClassName","aria-hidden","defaultProps","FormGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","layout_FormGroup","EditContact","updatedContact","put","match","params","About","NotFound","App","context_Provider","basename","process","layout_Header","react_router","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.da3713e2.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'DELETE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.filter(contact =>\n          contact.id !== action.payload\n        )\n      }\n    case 'ADD_CONTACT':\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      }\n    case 'UPDATE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n          contact.id === action.payload.id ? contact = action.payload : contact\n        )\n        // contacts: [\n          // action.payload,\n          // ...state.contacts.filter(contact =>\n          //   contact.id !== action.payload.id\n          // )\n        // ]\n      }\n    default:\n      return state;\n  }\n}\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => this.setState(state => reducer(state, action))\n  }\n\n  async componentDidMount() {\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\n    this.setState({ contacts: res.data });\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    )\n  }\n}\n\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport axios from 'axios';\n\nimport { Consumer } from '../../context';\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  onShowClick = e => {\n    this.setState({\n      showContactInfo: !this.state.showContactInfo\n    })\n  }\n  \n  onDeleteClick = async (id, dispatch) => {\n    try {\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n      dispatch({type: 'DELETE_CONTACT', payload: id});\n    } catch(e) {\n      dispatch({type: 'DELETE_CONTACT', payload: id});\n    }\n  }\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {name}&nbsp;\n                <i\n                  onClick={this.onShowClick}\n                  className=\"fas fa-sort-down\"\n                  style={{ cursor: 'pointer' }}\n                />\n                <i\n                  className=\"fas fa-times\"\n                  style={{\n                    cursor: 'pointer',\n                    float: 'right',\n                    color: 'red'\n                  }}\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                />\n                <NavLink to={`contact/edit/${id}`}>\n                  <i\n                    className=\"fas fa-pencil-alt\"\n                    style={{\n                      cursor: 'pointer',\n                      float: 'right',\n                      color: 'orange',\n                      marginTop: '.2rem',\n                      marginRight: '1.5rem',\n                      fontSize: '1.3rem'\n                    }}\n                  />\n                </NavLink>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Email: {email}</li>\n                  <li className=\"list-group-item\">Phone: {phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nContact.protoTypes = {\n  contact: PropTypes.object.isRequired\n}\n\nexport default Contact;","import React, { Component } from 'react';\nimport Contact from './Contact';\n\nimport { Consumer } from '../../context';\n\nclass Contacts extends Component {\n\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          return (\n          <React.Fragment>\n            <h1 className=\"display-4 mb-2\"><span className=\"text-danger\">Contact</span> List</h1>\n            {contacts.map(contact => (\n              <Contact\n                key={contact.id}\n                contact={contact}\n              />\n            ))}\n          </React.Fragment>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default Contacts;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nconst Header = (props) => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <NavLink to=\"/\" className=\"navbar-brand\">\n          {branding}\n        </NavLink>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <NavLink exact={true} to=\"/\" activeClassName=\"active\" className=\"nav-link\">\n                <i className=\"fas fa-home\" aria-hidden=\"true\"></i> Home\n              </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink to=\"/contact/add\" activeClassName=\"active\" className=\"nav-link\">\n                <i className=\"fas fa-plus\" aria-hidden=\"true\"></i> Add Contact\n              </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink to=\"/about\" activeClassName=\"active\" className=\"nav-link\">\n                <i className=\"fas fa-question\" aria-hidden=\"true\"></i> About\n              </NavLink>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nHeader.defaultProps = {\n  branding: 'My app'\n}\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n}\n\nexport default Header;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst FormGroup = ({\n  name,\n  label,\n  placeholder,\n  value,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        className={classnames('form-control form-control-lg', {\n          'is-invalid': error\n        })}\n        name={name}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  )\n}\n\nFormGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n}\n\nFormGroup.defaultProps = {\n  type: 'text'\n}\n\nexport default FormGroup;","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport axios from 'axios';\nimport FormGroup from '../layout/FormGroup';\n\nclass AddContact extends Component {\n\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    error: {}\n  }\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    if(name === '') {\n      this.setState({\n        error: {\n          name: 'Name is required'\n        }\n      });\n      return;\n    }\n    if(email === '') {\n      this.setState({\n        error: {\n          email: 'Email is required'\n        }\n      });\n      return;\n    }\n    if(phone === '') {\n      this.setState({\n        error: {\n          phone: 'Phone is required'\n        }\n      });\n      return;\n    }\n\n    const newContact = {\n      name,\n      email,\n      phone\n    }\n\n    const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\n    dispatch({ type: 'ADD_CONTACT', payload: res.data });\n\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      error: ''\n    });\n\n    this.props.history.push('/');\n  }\n\n  render() {\n    const { name, email, phone, error } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3 mt-4\">\n              <div className=\"card-header\">\n                <h2>Add Contact</h2>\n              </div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <FormGroup\n                    name=\"name\"\n                    label=\"Name\"\n                    placeholder=\"Enter name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={error.name}\n                  />\n                  <FormGroup\n                    name=\"email\"\n                    type=\"email\"\n                    label=\"Email\"\n                    placeholder=\"Enter email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={error.email}\n                  />\n                  <FormGroup\n                    name=\"phone\"\n                    label=\"Phone\"\n                    placeholder=\"Enter phone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={error.phone}\n                  />\n                  <button className=\"btn btn-primary btn-block\" type=\"submit\">Add contact</button>\n                </form>\n              </div>\n            </div>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default AddContact;","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport axios from 'axios';\nimport FormGroup from '../layout/FormGroup';\n\nclass EditContact extends Component {\n\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    error: {}\n  }\n\n  async componentDidMount() {\n    const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${this.props.match.params.id}`);\n    \n    const contact = res.data;\n\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n  }\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    if(name === '') {\n      this.setState({\n        error: {\n          name: 'Name is required'\n        }\n      });\n      return;\n    }\n    if(email === '') {\n      this.setState({\n        error: {\n          email: 'Email is required'\n        }\n      });\n      return;\n    }\n    if(phone === '') {\n      this.setState({\n        error: {\n          phone: 'Phone is required'\n        }\n      });\n      return;\n    }\n\n    const updatedContact = {\n      name,\n      email,\n      phone\n    }\n\n    const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${this.props.match.params.id}`, updatedContact);\n    dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\n\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      error: ''\n    });\n\n    this.props.history.push('/');\n  }\n\n  render() {\n    const { name, email, phone, error } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3 mt-4\">\n              <div className=\"card-header\">\n                <h2>Edit Contact</h2>\n              </div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <FormGroup\n                    name=\"name\"\n                    label=\"Name\"\n                    placeholder=\"Enter name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={error.name}\n                  />\n                  <FormGroup\n                    name=\"email\"\n                    type=\"email\"\n                    label=\"Email\"\n                    placeholder=\"Enter email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={error.email}\n                  />\n                  <FormGroup\n                    name=\"phone\"\n                    label=\"Phone\"\n                    placeholder=\"Enter phone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={error.phone}\n                  />\n                  <button className=\"btn btn-primary btn-block\" type=\"submit\">Update contact</button>\n                </form>\n              </div>\n            </div>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default EditContact;","import React from 'react';\n\nconst About = () => {\n  return (\n    <div>\n      <h1 className=\"display-4 mb-2\">About Manager</h1>\n      <p className=\"lead\">Simple react app for managing contacts</p>\n      <p className=\"text-secondary\">version 1.0.0</p>\n    </div>\n  )\n}\n\nexport default About;","import React from 'react';\n\nconst NotFound = () => {\n  return (\n    <div>\n      <h1 className=\"display-4 mb-2\"><span className=\"text-danger\">404</span> ERROR</h1>\n      <p className=\"lead\">Sorry, page does not exist</p>\n    </div>\n  )\n}\n\nexport default NotFound;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport Header from './components/layout/Header';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\n\nimport { Provider } from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.scss';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router basename={process.env.PUBLIC_URL}>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}